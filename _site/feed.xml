<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko-KR, en-US"><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="ko-KR, en-US" /><updated>2021-12-02T12:09:22+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">zgotter’s blog</title><subtitle>학습 내용을 정리한 블로그 입니다.
</subtitle><author><name>김성한</name><email>shkim4738@gmail.com</email></author><entry><title type="html">[Python Basics for AI] 2. 파이썬 기초 문법</title><link href="http://localhost:4000/blog/post/boostcampaitech2/pythonbasicsforai/2021-08-06-pythonbasicsforai-02/" rel="alternate" type="text/html" title="[Python Basics for AI] 2. 파이썬 기초 문법" /><published>2021-08-06T00:00:00+09:00</published><updated>2021-08-06T00:00:00+09:00</updated><id>http://localhost:4000/blog/post/boostcampaitech2/pythonbasicsforai/pythonbasicsforai-02</id><content type="html" xml:base="http://localhost:4000/blog/post/boostcampaitech2/pythonbasicsforai/2021-08-06-pythonbasicsforai-02/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#21-변수-variables&quot; id=&quot;markdown-toc-21-변수-variables&quot;&gt;2.1 변수 (Variables)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#22-함수와-콘솔-io-function-and-console-io&quot; id=&quot;markdown-toc-22-함수와-콘솔-io-function-and-console-io&quot;&gt;2.2 함수와 콘솔 I/O (Function and Console I/O)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#221-함수&quot; id=&quot;markdown-toc-221-함수&quot;&gt;2.2.1 함수&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#23-conditionals-and-loops&quot; id=&quot;markdown-toc-23-conditionals-and-loops&quot;&gt;2.3 Conditionals and Loops&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#24-string-and-advanced-function-concept&quot; id=&quot;markdown-toc-24-string-and-advanced-function-concept&quot;&gt;2.4 String and advanced function concept&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#241-function-type-hints&quot; id=&quot;markdown-toc-241-function-type-hints&quot;&gt;2.4.1 function type hints&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#242-function-docstring&quot; id=&quot;markdown-toc-242-function-docstring&quot;&gt;2.4.2 function docstring&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#243-함수-작성-가이드-라인&quot; id=&quot;markdown-toc-243-함수-작성-가이드-라인&quot;&gt;2.4.3 함수 작성 가이드 라인&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;21-변수-variables&quot;&gt;2.1 변수 (Variables)&lt;/h2&gt;

&lt;p&gt;생략&lt;/p&gt;

&lt;h2 id=&quot;22-함수와-콘솔-io-function-and-console-io&quot;&gt;2.2 함수와 콘솔 I/O (Function and Console I/O)&lt;/h2&gt;

&lt;h3 id=&quot;221-함수&quot;&gt;2.2.1 함수&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 151
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;151
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;23-conditionals-and-loops&quot;&gt;2.3 Conditionals and Loops&lt;/h2&gt;

&lt;p&gt;생략&lt;/p&gt;

&lt;h2 id=&quot;24-string-and-advanced-function-concept&quot;&gt;2.4 String and advanced function concept&lt;/h2&gt;

&lt;h3 id=&quot;241-function-type-hints&quot;&gt;2.4.1 function type hints&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파이썬의 가장 큰 특징 : dynamic typing
    &lt;ul&gt;
      &lt;li&gt;처음 함수를 사용하는 사용자가 interface를 알기 어렵다는 단점이 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;python 3.5 버전 이후로는 PEP 484 에 기반하여 type hints 기능 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;return_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;type_hint_example&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (파라미터명: 타입) -&amp;gt; 리턴 타입
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;type_hint_example&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sunghan'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'Hello, sunghan'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type hints의 장점&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;사용자에게 인터페이스를 명확히 알려줄 수 있다.&lt;/li&gt;
  &lt;li&gt;함수의 문서화 시 parameter에 대한 정보를 명확히 알 수 있다.&lt;/li&gt;
  &lt;li&gt;mypy 또는 IDE, linter 등을 통해 코드의 발생 가능한 오류를 사전에 확인&lt;/li&gt;
  &lt;li&gt;시스템 전체적인 안정성을 확보할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;242-function-docstring&quot;&gt;2.4.2 function docstring&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파이썬 함수에 대한 상세스펙을 사전에 작성 (함수 사용자의 이해도 up)&lt;/li&gt;
  &lt;li&gt;세개의 따옴표로 docstring 영역 표시 (함수명 아래)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;kos_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Return the pathname of the KOS root directory.&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_kos_root&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_kos_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_kos_root&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_binary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Returns the sum of two decimal numbers in binary digits.

        Parameters:
            a (int): A decimal integer
            b (int): Another decimal integer

        Returns:
            binary_sum (str): Binary string of the sum of a and b

        Examples:
            a = 10, b = 15
            binary_sum = &quot;11001&quot;

    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;binary_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binary_sum&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_binary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;11001
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;vscode 의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python Docstring Generator&lt;/code&gt; extensions 를 설치하면 손쉽게 docstring 을 작성할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + Shift + P&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Generate Docstring&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;243-함수-작성-가이드-라인&quot;&gt;2.4.3 함수 작성 가이드 라인&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;가능하면 짧게 작성&lt;/li&gt;
  &lt;li&gt;함수명은 소문자로 구성, 필요하면 밑줄로 나눔&lt;/li&gt;
  &lt;li&gt;함수 이름에 함수의 역할, 의도가 명확히 들어낼 것
    &lt;ul&gt;
      &lt;li&gt;v, o : ~를 한다.&lt;/li&gt;
      &lt;li&gt;띄어쓰기는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_&lt;/code&gt; 사용&lt;/li&gt;
      &lt;li&gt;ex) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print_hello_world()&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;하나의 함수에는 유사한 역할을 하는 코드만 포함&lt;/li&gt;
  &lt;li&gt;인자로 받은 값 자체를 바꾸진 말 것 (임시 변수 선언)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>zgotter</name></author><category term="post" /><category term="boostcampaitech2" /><category term="pythonbasicsforai" /><summary type="html"></summary></entry><entry><title type="html">[AI Math] 1. 벡터</title><link href="http://localhost:4000/blog/post/boostcampaitech2/aimath/2021-08-06-aimath-01/" rel="alternate" type="text/html" title="[AI Math] 1. 벡터" /><published>2021-08-06T00:00:00+09:00</published><updated>2021-08-06T00:00:00+09:00</updated><id>http://localhost:4000/blog/post/boostcampaitech2/aimath/aimath-01</id><content type="html" xml:base="http://localhost:4000/blog/post/boostcampaitech2/aimath/2021-08-06-aimath-01/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#11-벡터의-노름&quot; id=&quot;markdown-toc-11-벡터의-노름&quot;&gt;1.1 벡터의 노름&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#111-l_1-노름&quot; id=&quot;markdown-toc-111-l_1-노름&quot;&gt;1.1.1 \(L_1\) 노름&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#112-l_2-노름&quot; id=&quot;markdown-toc-112-l_2-노름&quot;&gt;1.1.2 \(L_2\) 노름&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#113-왜-다른-노름을-소개하나&quot; id=&quot;markdown-toc-113-왜-다른-노름을-소개하나&quot;&gt;1.1.3 왜 다른 노름을 소개하나?&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#12-두-벡터-사이의-거리&quot; id=&quot;markdown-toc-12-두-벡터-사이의-거리&quot;&gt;1.2 두 벡터 사이의 거리&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#13-두-벡터-사이의-각도&quot; id=&quot;markdown-toc-13-두-벡터-사이의-각도&quot;&gt;1.3 두 벡터 사이의 각도&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#14-내적을-어떻게-해석할까&quot; id=&quot;markdown-toc-14-내적을-어떻게-해석할까&quot;&gt;1.4 내적을 어떻게 해석할까?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;11-벡터의-노름&quot;&gt;1.1 벡터의 노름&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;벡터의 노름(norm)은 &lt;strong&gt;원점에서부터의 거리&lt;/strong&gt;를 말한다.&lt;/li&gt;
  &lt;li&gt;다양한 형태의 노름(norm)이 존재한다.&lt;/li&gt;
  &lt;li&gt;노름(norm)은 임의의 차원 \(d\)에 대해 성립한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;111-l_1-노름&quot;&gt;1.1.1 \(L_1\) 노름&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;각 성분의 &lt;strong&gt;변화량의 절대값&lt;/strong&gt;을 모두 더한다.&lt;/li&gt;
  &lt;li&gt;좌표축을 따라 움직이는 거리&lt;/li&gt;
&lt;/ul&gt;

\[||\mathbb{x}||_1 = \sum_{i=1}^d | x_i |\]

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;112-l_2-노름&quot;&gt;1.1.2 \(L_2\) 노름&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;피타고라스 정리를 이용해 &lt;strong&gt;유클리드 거리&lt;/strong&gt;를 계산한다.&lt;/li&gt;
  &lt;li&gt;\(L_2\) 노름은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.linalg.norm&lt;/code&gt; 을 이용해도 구현 가능하다.&lt;/li&gt;
&lt;/ul&gt;

\[||\mathbb{x}||_2 = \sqrt{\sum_{i=1}^d {| x_i |}^2}\]

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;113-왜-다른-노름을-소개하나&quot;&gt;1.1.3 왜 다른 노름을 소개하나?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;노름의 종류에 따라 &lt;strong&gt;기하학적 성질&lt;/strong&gt;이 달라진다.&lt;/li&gt;
  &lt;li&gt;머신러닝에선 각 성질들이 필요할 때가 있으므로 둘 다 사용한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;     
&lt;img src=&quot;https://drive.google.com/uc?id=1sCVlDZIwaVnex_NBZXJO0fBrBJ5kv8Wu&quot; width=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;12-두-벡터-사이의-거리&quot;&gt;1.2 두 벡터 사이의 거리&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;\(L_1\), \(L_2\) 노름을 이용해 두 벡터 사이의 거리를 계산할 수 있다.&lt;/li&gt;
  &lt;li&gt;두 벡터 사이의 거리를 계산할 때는 &lt;strong&gt;벡터의 뺄셈&lt;/strong&gt;을 이용한다.
    &lt;ul&gt;
      &lt;li&gt;벡터 \(\mathbb{x}\)와 벡터 \(\mathbb{y}\) 사이의 거리 : \(\|\|\mathbb{y}-\mathbb{x}\|\|=\|\|\mathbb{x}-\mathbb{y}\|\|\)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;13-두-벡터-사이의-각도&quot;&gt;1.3 두 벡터 사이의 각도&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;두 벡터 사이의 각도를 구하는 것은 \(L_2\) 노름에서만 가능하다. (\(L_1\) 노름에서는 각도를 계산할 수 없다.)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;제 2 코사인 법칙&lt;/strong&gt;에 의해 두 벡터 사이의 각도를 계산할 수 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;벡터 \(\mathbb{x}\)와 벡터 \(\mathbb{y}\) 사이의 각도&lt;/li&gt;
&lt;/ul&gt;

\[cos \theta = \frac{||\mathbb{x}||_2^2 + ||\mathbb{y}||_2^2 - ||\mathbb{x} - \mathbb{y}||_2^2}{2 ||\mathbb{x}||_2 ||\mathbb{y}||_2}\]

&lt;ul&gt;
  &lt;li&gt;위 공식의 분자를 쉽계 계산하는 방법이 &lt;strong&gt;내적&lt;/strong&gt;이다.&lt;/li&gt;
&lt;/ul&gt;

\[cos \theta = 
\frac{2 &amp;lt;\mathbb{x}, \mathbb{y}&amp;gt;}{2 ||\mathbb{x}||_2 ||\mathbb{y}||_2} =
\frac{&amp;lt;\mathbb{x}, \mathbb{y}&amp;gt;}{||\mathbb{x}||_2 ||\mathbb{y}||_2}\]

&lt;ul&gt;
  &lt;li&gt;내적(inner product) 연산&lt;/li&gt;
&lt;/ul&gt;

\[&amp;lt;\mathbb{x}, \mathbb{y}&amp;gt; = \sum_{i=1}^d x_i y_i\]

&lt;ul&gt;
  &lt;li&gt;내적은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.inner&lt;/code&gt; 응 이용해서 계산한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;14-내적을-어떻게-해석할까&quot;&gt;1.4 내적을 어떻게 해석할까?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;내적은 &lt;strong&gt;정사영(orthogonal projection)된 벡터의 길이&lt;/strong&gt;와 관련 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;     
&lt;img src=&quot;https://drive.google.com/uc?id=11QUTwQgzRiEF48e6lP9o2vl62BaiZAu_&quot; width=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;\(Proj(\mathbb{x})\) : 벡터 \(\mathbb{y}\)로 정사영된 벡터 \(\mathbb{x}\)의 &lt;strong&gt;그림자&lt;/strong&gt;를 의미&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;\(Proj(\mathbb{x})\) 의 길이는 &lt;strong&gt;코사인법칙&lt;/strong&gt;에 의해 \(\|\|\mathbb{x}\|\| cos \theta\) 와 같다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

\[Proj(\mathbb{x}) = \|\|\mathbb{x}\|\| cos \theta\]

&lt;p&gt;     
&lt;img src=&quot;https://drive.google.com/uc?id=11PA5Crp6xoJwdU8zL1rkHp_Qtg0J0ASt&quot; width=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;내적은 정사영된 벡터의 길이를 &lt;strong&gt;벡터 \(\mathbb{y}\) 의 길이 \(\|\|\mathbb{y}\|\|\) 만큼 조정&lt;/strong&gt;한 값이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;     
&lt;img src=&quot;https://drive.google.com/uc?id=1aQpdPdO2hv8lEo9We2zv59skwNOTVTtO&quot; width=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;내적은 두 벡터의 &lt;strong&gt;유사도(similarity)&lt;/strong&gt;를 측정하는 데 사용 가능하다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>zgotter</name></author><category term="post" /><category term="boostcampaitech2" /><category term="aimath" /><summary type="html"></summary></entry></feed>